<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 MyBatis에서 처리할 SQL문을 작성하는 문서 -->
<!DOCTYPE mapper
	PUBLIC "-//mtbatis.org//DTO Mapper 3.0/EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <mapper>태그의 namespace 속성값은 이 문서에 작성된 SQL문을 호출할 때 같이 사용되는 이름이다 -->
<mapper namespace="member">
	<!-- 이 <mapper>태그 영역 안에는 처리할 SQL문에 맞는 태그를 사용해서 SQL문을 작성한다 * 사용할 수 있는 태그들 
		<select> ~ select 구문 ~ </select> <insert> ~ insert 구문 ~ </insert> <update> 
		~ update 구문 ~ </update> <delete> ~ delete 구문 ~ </delete> 등... -->

	<!-- * id 속성 : 실행할 SQL문이 작성된 태그를 Java소스에서 호출할 때 사용되는 이름으로 위의 <mapper>태그의 
		namespace 속성값과 연결해서 사용한다 예 ) "lprod.selectMember" * parameterType 속성 : 작성된 
		SQL문에 사용될 데이터가 들어있는 객체정보를 기술한다. (보통 VO 클래스, Java의 기본 자료형 이름, Map 객체 등이 사용된다.) 
		(VO 클래스 등을 기술할 때는 해당 클래스의 패키지명을 포함한 전체 이름을 기술해야 한다.) (이 속성에는 <typeAlias>태그에서 
		지정한 'alias속성값'을 사용할 수 있다) * resultType 속성 : 작성된 SQL문의 실행결과 insert, delete, 
		update - 실행된 결과의 건수 - 기술되지 않고 자동 리턴 select (거의 VO클래스, map) -->

	<select id="selectMember" resultType="memberVO">
		select * from member
	</select>

	<select id="selectById" parameterType="map"
		resultType="memberVO">
		select * from member where mem_id = #{id} and mem_pass = #{pass}
	</select>
	
	<!-- 아이디 중복 검사 쿼리 -->
	<select id="idcheck" parameterType="String" resultType="String">
		select mem_id from member where mem_id = #{data}
	</select>
	
	<!-- 우편번호 검색 쿼리 -->
	<select id="selectByDong" parameterType="String" resultType="zipVO">
		select * from ziptb where dong like #{data}||'%'
	</select>
	<!-- 파라미터에 문자를 더하려면 || 사용, 파라미터에는 따옴표 못씀 -->
	
	<!-- 회원가입 쿼리 -->
	<insert id="insertMember" parameterType="memberVO">
	insert into member (
	    mem_id,
	    mem_pass,
	    mem_name,
	    mem_bir,
	    mem_zip,
	    mem_add1,
	    mem_add2,
	    mem_hp,
	    mem_mail
	) values (
	    #{mem_id},
	    #{mem_pass},
	    #{mem_name},
	    #{mem_bir},
	    #{mem_zip},
	    #{mem_add1},
	    #{mem_add2},
	    #{mem_hp},
	    #{mem_mail}
	)
	</insert>
</mapper>